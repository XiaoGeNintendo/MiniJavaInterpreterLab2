int get_size(int[][] a) {
    assert(a != null);
    int n = length(a);
    assert(n >= 1);
    assert(a[0] != null);
    for(int i = 0; i < n; i++) {
        assert(length(a[i]) == n);
    }
    return n;
}

int[][] Mul(int[][] a, int[][] b) {
    int n = get_size(a);
    assert(n == get_size(b));
    int[][] c = new int[n][n];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            for(int k = 0; k < n; k++) {
                c[i][j] += a[i][k] * b[k][j];
            }
        }
    }
    return c;
}

int[][] qpow(int[][] a, int p) {
    int n = get_size(a);
    
    int[][] ans = new int[n][n];
    for(int i = 0; i < n; i++) {
        ans[i][i] = 1;
    }
    
    while(p > 0) {
        if((p & 1) == 1) {
            ans = Mul(ans, a);
        }
        a = Mul(a, a);
        p >>= 1;
    }
    
    return ans;
}

int main() {
    int[][] a = new int[][] {{1, 2}, {3, 4}};
    println(qpow(a, 5));
    return 0;
}

/*
[[1069, 1558], [2337, 3406]]
Process exits with the code 0.
*/